{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Pfe\\\\projet pfe molka attia\\\\projet-pfe-molka-attia-1\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { tickets } from '../tech-tickets/tickets-list';\nimport { users } from '../../admin/user/users-list';\nlet DemandeenvoyerComponent = class DemandeenvoyerComponent {\n  constructor(userService, techService, route, router) {\n    this.userService = userService;\n    this.techService = techService;\n    this.route = route;\n    this.router = router;\n    this.fetchedTicket = tickets;\n    this.fetchedtechniciens = users;\n    this.showTicketDetails = false;\n    this.ticketsList = tickets;\n    this.showTicketaffectation = false;\n    this.currentticket = tickets[0];\n    this.fetchedTechniciens = users;\n    this.fetchedadmin = users;\n    this.showTicketcloturation = false;\n    this.technicienId = localStorage.getItem('user');\n    this.showAddDemandeForm = false;\n  }\n\n  ngOnInit() {\n    const type = JSON.parse(localStorage.getItem('user')).type;\n\n    if (type == \"admin\") {\n      this.admin = true;\n    }\n\n    this.techService.getdemandesenvoyer(JSON.parse(this.technicienId).userId).subscribe(resultatTicket => {\n      this.fetchedDemandes = resultatTicket;\n      console.log(resultatTicket);\n    });\n    this.formaddDemande = new FormGroup({\n      contenu: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      recepteur_id: new FormControl(null, {\n        validators: [Validators.required]\n      }),\n      ticket_id: new FormControl(null, {\n        validators: [Validators.required]\n      }) //  type: new FormControl(null,{validators:[Validators.required]}),\n      //  user_img: new FormControl(null,{validators:[Validators.required]}),\n\n    });\n  }\n\n  onClickShowForm() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.showAddDemandeForm = true;\n      yield _this.userService.getTicketsTech(JSON.parse(_this.technicienId).userId).subscribe(resultatTicket => {\n        _this.fetchedTicket = resultatTicket;\n        console.log(resultatTicket);\n      });\n\n      _this.userService.getTechniciens().subscribe(resultatUser => {\n        _this.fetchedtechniciens = resultatUser;\n        console.log(resultatUser);\n      });\n\n      _this.userService.getadmin().subscribe(resultatUser => {\n        _this.fetchedadmin = resultatUser;\n        console.log(resultatUser);\n      });\n    })();\n  }\n\n  onClickCloseForm() {\n    this.showAddDemandeForm = false;\n  }\n\n  onAddSubmit() {\n    this.techService.addDemande(this.formaddDemande.value.contenu, this.formaddDemande.value.recepteur_id, JSON.parse(this.technicienId).userId, this.formaddDemande.value.ticket_id);\n    this.showAddDemandeForm = false; // this.router.navigate(['dash-respo/events']);\n  }\n\n  onClickShowForm2(idticket) {\n    this.showTicketDetails = true; // getoneticket(id:string)\n\n    this.userService.getoneticket(idticket).subscribe(resultatUser => {\n      this.ticket = resultatUser;\n      console.log(resultatUser);\n    });\n    this.currentticket = this.ticket; //ticket.opened=\"opened\";\n\n    this.userService.getUser(this.currentticket.demandeur).subscribe(resultat => {\n      console.log(resultat);\n      this.user = resultat;\n    });\n    this.userService.getUser(this.currentticket.assignetech).subscribe(resultat => {\n      console.log(resultat);\n      this.technicienaffecte = resultat;\n    });\n  }\n\n  onacceptdemande(id, ticket) {\n    if (this.admin == true) {\n      this.techService.repondredemande(\"acceptée\", id);\n      this.userService.EditAffecter(\"\", ticket);\n    } else if (this.admin == false) {\n      this.techService.repondredemande(\"acceptée\", id);\n      this.userService.EditAffecter(JSON.parse(this.technicienId).userId, ticket);\n    } //repondredemande(etat:string,id:string)\n\n  }\n\n  onClickCloseForm2() {\n    this.showTicketDetails = false;\n  }\n\n  onrefusedemande(id) {\n    this.techService.repondredemande(\"refusée\", id);\n  }\n\n};\nDemandeenvoyerComponent = __decorate([Component({\n  selector: 'app-demandeenvoyer',\n  templateUrl: './demandeenvoyer.component.html',\n  styleUrls: ['./demandeenvoyer.component.css']\n})], DemandeenvoyerComponent);\nexport { DemandeenvoyerComponent };","map":{"version":3,"sources":["C:/Pfe/projet pfe molka attia/projet-pfe-molka-attia-1/FrontEnd/src/app/technicien/demandeenvoyer/demandeenvoyer.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","Validators","tickets","users","DemandeenvoyerComponent","constructor","userService","techService","route","router","fetchedTicket","fetchedtechniciens","showTicketDetails","ticketsList","showTicketaffectation","currentticket","fetchedTechniciens","fetchedadmin","showTicketcloturation","technicienId","localStorage","getItem","showAddDemandeForm","ngOnInit","type","JSON","parse","admin","getdemandesenvoyer","userId","subscribe","resultatTicket","fetchedDemandes","console","log","formaddDemande","contenu","validators","required","recepteur_id","ticket_id","onClickShowForm","getTicketsTech","getTechniciens","resultatUser","getadmin","onClickCloseForm","onAddSubmit","addDemande","value","onClickShowForm2","idticket","getoneticket","ticket","getUser","demandeur","resultat","user","assignetech","technicienaffecte","onacceptdemande","id","repondredemande","EditAffecter","onClickCloseForm2","onrefusedemande","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { tickets } from '../tech-tickets/tickets-list';\r\nimport { users } from '../../admin/user/users-list';\r\nlet DemandeenvoyerComponent = class DemandeenvoyerComponent {\r\n    constructor(userService, techService, route, router) {\r\n        this.userService = userService;\r\n        this.techService = techService;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.fetchedTicket = tickets;\r\n        this.fetchedtechniciens = users;\r\n        this.showTicketDetails = false;\r\n        this.ticketsList = tickets;\r\n        this.showTicketaffectation = false;\r\n        this.currentticket = tickets[0];\r\n        this.fetchedTechniciens = users;\r\n        this.fetchedadmin = users;\r\n        this.showTicketcloturation = false;\r\n        this.technicienId = localStorage.getItem('user');\r\n        this.showAddDemandeForm = false;\r\n    }\r\n    ngOnInit() {\r\n        const type = JSON.parse(localStorage.getItem('user')).type;\r\n        if (type == \"admin\") {\r\n            this.admin = true;\r\n        }\r\n        this.techService.getdemandesenvoyer(JSON.parse(this.technicienId).userId).subscribe((resultatTicket) => {\r\n            this.fetchedDemandes = resultatTicket;\r\n            console.log(resultatTicket);\r\n        });\r\n        this.formaddDemande = new FormGroup({\r\n            contenu: new FormControl(null, { validators: [Validators.required] }),\r\n            recepteur_id: new FormControl(null, { validators: [Validators.required] }),\r\n            ticket_id: new FormControl(null, { validators: [Validators.required] }),\r\n            //  type: new FormControl(null,{validators:[Validators.required]}),\r\n            //  user_img: new FormControl(null,{validators:[Validators.required]}),\r\n        });\r\n    }\r\n    async onClickShowForm() {\r\n        this.showAddDemandeForm = true;\r\n        await this.userService.getTicketsTech(JSON.parse(this.technicienId).userId).subscribe((resultatTicket) => {\r\n            this.fetchedTicket = resultatTicket;\r\n            console.log(resultatTicket);\r\n        });\r\n        this.userService.getTechniciens().subscribe((resultatUser) => {\r\n            this.fetchedtechniciens = resultatUser;\r\n            console.log(resultatUser);\r\n        });\r\n        this.userService.getadmin().subscribe((resultatUser) => {\r\n            this.fetchedadmin = resultatUser;\r\n            console.log(resultatUser);\r\n        });\r\n    }\r\n    onClickCloseForm() {\r\n        this.showAddDemandeForm = false;\r\n    }\r\n    onAddSubmit() {\r\n        this.techService.addDemande(this.formaddDemande.value.contenu, this.formaddDemande.value.recepteur_id, JSON.parse(this.technicienId).userId, this.formaddDemande.value.ticket_id);\r\n        this.showAddDemandeForm = false;\r\n        // this.router.navigate(['dash-respo/events']);\r\n    }\r\n    onClickShowForm2(idticket) {\r\n        this.showTicketDetails = true;\r\n        // getoneticket(id:string)\r\n        this.userService.getoneticket(idticket).subscribe((resultatUser) => {\r\n            this.ticket = resultatUser;\r\n            console.log(resultatUser);\r\n        });\r\n        this.currentticket = this.ticket;\r\n        //ticket.opened=\"opened\";\r\n        this.userService.getUser(this.currentticket.demandeur).subscribe((resultat) => {\r\n            console.log(resultat);\r\n            this.user = resultat;\r\n        });\r\n        this.userService.getUser(this.currentticket.assignetech).subscribe((resultat) => {\r\n            console.log(resultat);\r\n            this.technicienaffecte = resultat;\r\n        });\r\n    }\r\n    onacceptdemande(id, ticket) {\r\n        if (this.admin == true) {\r\n            this.techService.repondredemande(\"acceptée\", id);\r\n            this.userService.EditAffecter(\"\", ticket);\r\n        }\r\n        else if (this.admin == false) {\r\n            this.techService.repondredemande(\"acceptée\", id);\r\n            this.userService.EditAffecter(JSON.parse(this.technicienId).userId, ticket);\r\n        }\r\n        //repondredemande(etat:string,id:string)\r\n    }\r\n    onClickCloseForm2() {\r\n        this.showTicketDetails = false;\r\n    }\r\n    onrefusedemande(id) {\r\n        this.techService.repondredemande(\"refusée\", id);\r\n    }\r\n};\r\nDemandeenvoyerComponent = __decorate([\r\n    Component({\r\n        selector: 'app-demandeenvoyer',\r\n        templateUrl: './demandeenvoyer.component.html',\r\n        styleUrls: ['./demandeenvoyer.component.css']\r\n    })\r\n], DemandeenvoyerComponent);\r\nexport { DemandeenvoyerComponent };\r\n"]},"metadata":{},"sourceType":"module"}